cmake_minimum_required(VERSION 2.8.3)
project(art_map)
# Load catkin and all dependencies required for this package
# TODO: remove all from COMPONENTS that are not catkin packages.
find_package(catkin REQUIRED COMPONENTS angles geometry_msgs nav_msgs roscpp sensor_msgs tf visualization_msgs)
find_package(Boost REQUIRED COMPONENTS thread)
include_directories(include ${Boost_INCLUDE_DIR} ${catkin_INCLUDE_DIRS})

# include_directories(include ${Boost_INCLUDE_DIR} ${catkin_INCLUDE_DIRS})
# CATKIN_MIGRATION: removed during catkin migration
# cmake_minimum_required(VERSION 2.4.6)


#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

add_subdirectory(src/lib)
add_subdirectory(src/node)
## Generate added messages and services with any dependencies listed here
#generate_messages(
    #TODO DEPENDENCIES geometry_msgs std_msgs)

# catkin_package parameters: http://ros.org/doc/groovy/api/catkin/html/dev_guide/generated_cmake_api.html#catkin-package
# TODO: fill in what other packages will need to use this package
catkin_package(
    DEPENDS angles art_common art_msgs geometry_msgs nav_msgs roscpp sensor_msgs tf visualization_msgs
    CATKIN_DEPENDS # TODO
    INCLUDE_DIRS include # TODO include
    LIBRARIES # TODO
)
add_library(artmap
  FilteredPolygon.cc
  DrawLanes.cc
  gaussian.cc
  Graph.cc
  KF.cc
  MapLanes.cc
  Matrix.cc
  rotate_translate_transform.cc
  PolyOps.cc
  RNDF.cc
  SmoothCurve.cc
  VisualLanes.cc
  ZoneOps.cc
)
add_executable(maplanes mapl.cc)
target_link_libraries(maplanes artmap ${catkin_LIBRARIES})
add_dependencies(maplanes ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS} ${catkin_LIBRARIES} ${PROJECT_NAME}_gencfg)
#add_dependencies(maplanes ${${PROJECT_NAME}_EXPORTED_TARGETS}) 
#rosbuild_add_executable(rndf_lanes rndf_lanes.cc)
#target_link_libraries(rndf_lanes artmap)

add_executable(test_lanes test_lanes.cc )
target_link_libraries(test_lanes artmap)
add_dependencies(test_lanes ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS} ${catkin_LIBRARIES} ${PROJECT_NAME}_gencfg)
add_executable(getpoints getpoints.cc)
